// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Register Page renders correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessible={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "flex": 1,
      "padding": 30,
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignSelf": "center",
        "borderColor": "#000",
        "borderRadius": 80,
        "borderWidth": 1,
        "flexDirection": "column",
        "height": 120,
        "justifyContent": "center",
        "marginVertical": 10,
        "opacity": 1,
        "width": 120,
      }
    }
  >
    <View
      style={
        {
          "alignSelf": "center",
          "borderColor": "#000",
          "borderRadius": 80,
          "borderWidth": 1,
          "flexDirection": "column",
          "height": 120,
          "justifyContent": "center",
          "marginVertical": 10,
          "width": 120,
        }
      }
    >
      <Text />
    </View>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#ededed",
        "borderRadius": 10,
        "flexDirection": "row",
        "height": 50,
        "justifyContent": "space-between",
        "marginBottom": 15,
      }
    }
  >
    <TextInput
      collapsable={false}
      handlerTag={1}
      handlerType="NativeViewGestureHandler"
      onChangeText={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      placeholder="Name"
      placeholderTextColor="#838383"
      style={
        [
          {
            "backgroundColor": "#ededed",
            "borderRadius": 10,
            "flex": 1,
            "fontSize": 16,
            "height": 50,
            "marginBottom": 15,
            "paddingHorizontal": 15,
            "paddingVertical": 10,
            "top": 8,
            "zIndex": 1,
          },
          false,
        ]
      }
      value=""
    />
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#ededed",
        "borderRadius": 10,
        "flexDirection": "row",
        "height": 50,
        "justifyContent": "space-between",
        "marginBottom": 15,
      }
    }
  >
    <TextInput
      autoCapitalize="none"
      collapsable={false}
      handlerTag={2}
      handlerType="NativeViewGestureHandler"
      keyboardType="email-address"
      onChangeText={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      placeholder="E-mail"
      placeholderTextColor="#838383"
      style={
        [
          {
            "backgroundColor": "#ededed",
            "borderRadius": 10,
            "flex": 1,
            "fontSize": 16,
            "height": 50,
            "marginBottom": 15,
            "paddingHorizontal": 15,
            "paddingVertical": 10,
            "top": 8,
            "zIndex": 1,
          },
          false,
        ]
      }
      value=""
    />
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#ededed",
        "borderRadius": 10,
        "flexDirection": "row",
        "height": 50,
        "justifyContent": "space-between",
        "marginBottom": 15,
      }
    }
  >
    <TextInput
      collapsable={false}
      handlerTag={3}
      handlerType="NativeViewGestureHandler"
      keyboardType="phone-pad"
      onChangeText={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      placeholder="Mobile Number (++)"
      placeholderTextColor="#838383"
      style={
        [
          {
            "backgroundColor": "#ededed",
            "borderRadius": 10,
            "flex": 1,
            "fontSize": 16,
            "height": 50,
            "marginBottom": 15,
            "paddingHorizontal": 15,
            "paddingVertical": 10,
            "top": 8,
            "zIndex": 1,
          },
          false,
        ]
      }
      value=""
    />
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#ededed",
        "borderRadius": 10,
        "flexDirection": "row",
        "height": 50,
        "justifyContent": "space-between",
        "marginBottom": 15,
      }
    }
  >
    <TextInput
      collapsable={false}
      handlerTag={4}
      handlerType="NativeViewGestureHandler"
      onChangeText={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      placeholder="Password"
      placeholderTextColor="#838383"
      secureTextEntry={true}
      style={
        {
          "backgroundColor": "#ededed",
          "borderRadius": 10,
          "flex": 1,
          "fontSize": 16,
          "height": 50,
          "marginBottom": 15,
          "paddingHorizontal": 15,
          "paddingVertical": 10,
          "top": 8,
          "zIndex": 1,
        }
      }
      textContentType="password"
      value=""
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <Text />
    </View>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#ededed",
        "borderRadius": 10,
        "flexDirection": "row",
        "height": 50,
        "justifyContent": "space-between",
        "marginBottom": 15,
      }
    }
  >
    <TextInput
      collapsable={false}
      handlerTag={5}
      handlerType="NativeViewGestureHandler"
      onChangeText={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      placeholder="Confirm Password"
      placeholderTextColor="#838383"
      secureTextEntry={true}
      style={
        {
          "backgroundColor": "#ededed",
          "borderRadius": 10,
          "flex": 1,
          "fontSize": 16,
          "height": 50,
          "marginBottom": 15,
          "paddingHorizontal": 15,
          "paddingVertical": 10,
          "top": 8,
          "zIndex": 1,
        }
      }
      textContentType="password"
      value=""
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <Text />
    </View>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#000",
        "borderRadius": 25,
        "marginTop": 10,
        "opacity": 1,
        "padding": 15,
      }
    }
  >
    <Text
      style={
        {
          "color": "#fff",
        }
      }
    >
      Register
    </Text>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "marginTop": 10,
        "opacity": 1,
      }
    }
  />
</View>
`;
